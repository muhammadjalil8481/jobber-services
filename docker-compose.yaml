services:
  # redis:
  #   container_name: redis_container
  #   image: redis:alpine
  #   restart: always
  #   ports:
  #     - '6379:6379'
  #   command: redis-server --loglevel warning
  #   volumes:
  #     - ./docker-volumes/cache:/data
  # mongodb:
  #   container_name: mongodb_container
  #   image: mongo:latest
  #   restart: always
  #   ports:
  #     - '27017:27017'
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   volumes:
  #     - ./docker-volumes/mongodb_data:/data/db
  auth_database:
    container_name: auth_db_container
    image: mysql:latest
    restart: always
    ports:
      - '3307:3306'
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: auth
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
  # postgres:
  #   container_name: postgres_container
  #   image: postgres:latest
  #   restart: always
  #   ports:
  #     - '5432:5432'
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DATABASE: reviews
  #   volumes:
  #     - ./docker-volumes/postgresql:/var/lib/postgresql4
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user # Default username
      RABBITMQ_DEFAULT_PASS: password # Default password
    ports:
      - '5672:5672' #AMQP
      - '15672:15672' #Dashboard
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m # Set memory limits for Elasticsearch
      bootstrap.memory_lock: "true"
      discovery.type: single-node # Single-node mode for development
      ELASTIC_PASSWORD: password # Default password for the 'elastic' user
      xpack.security.enabled: "false" # Disable security
      xpack.security.authc.api_key.enabled: "true"
      # xpack.monitoring.authc.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.17.0
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch_container:9200"]'
    ports:
      - 5601:5601
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
  # notifications:
  #   container_name: notifications_container
  #   build:
  #     context: ../3-jobber-notification
  #     dockerfile: Dockerfile.dev
  #   restart: always
  #   ports:
  #     - '4001:4001'
  #   environment:
  #     - ENABLE_APM=0
  #     - PORT=4001
  #     - NODE_ENV=development
  #     - CLIENT_URL=http://localhost:3000
  #     - RABBITMQ_ENDPOINT=amqp://user:password@rabbitmq_container:5672
  #     - SENDER_EMAIL_NAME=Frederick Orn
  #     - SENDER_EMAIL=frederick.orn90@ethereal.email
  #     - SENDER_EMAIL_PASSWORD=t42jraCM6KvuDwtKDK
  #     - SMTP_HOST=smtp.ethereal.email
  #     - SMTP_PORT=586
  #     - ELASTIC_SEARCH_URL=http://elasticsearch:9200
  #   depends_on:
  #     - rabbitmq
  #     - elasticsearch
  # gateway:
  #   container_name: gateway_container
  #   build:
  #     context: ../1-gateway
  #     dockerfile: Dockerfile.dev
  #   restart: always
  #   ports:
  #     - '4000:4000'
  #   environment:
  #     - PORT=4000
  #     - NODE_ENV=development
  #     - GATEWAY_JWT_TOKEN=gateway_token_shnc
  #     - JWT_TOKEN=jwt_token_qxdc
  #     - SECRET_KEY_ONE=secret_key_one_qndc
  #     - SECRET_KEY_TWO=secret_key_two_mckc
  #     - CLIENT_URL=http://localhost:3000
  #     - AUTH_BASE_URL =
  #     - USERS_BASE_URL =
  #     - GIG_BASE_URL =
  #     - MESSAGE_BASE_URL =
  #     - ORDER_BASE_URL =
  #     - REVIEW_BASE_URL =
  #     - REDIS_HOST =
  #     - ELASTIC_SEARCH_URL=http://elasticsearch:9200
  #     - ELASTIC_APM_SERVER_URL=http://localhost:8200
  #     - ELASTIC_APM_SECRET_TOKEN =
  #     - ENABLE_APM=0
  #   depends_on:
  #     - elasticsearch
